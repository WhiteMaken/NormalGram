{
	"info": {
		"_postman_id": "a84462dd-b918-420f-8862-adcac8f566f4",
		"name": "Users Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be574664-f45c-443f-80f3-aa266538ca0f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"user_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"Kami\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"sanji.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"makenshi\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"mudg.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"God\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"thelastjudgment.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n   \"username\" : \"madoushi\",\r\n\r\n   \"password\" : \"pp1234\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"redmist.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e48a55dc-4e58-46f3-b96a-479556e0143c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"pm.expect(jsonData.likes).to.eql(0);\r",
							"pm.expect(jsonData.unique_views).to.eql(0);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"post_id\", jsonData._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"text\" : \"I love you\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d6dd06c5-84da-43a7-b838-e50676e05abc",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"singlepost_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e948768-4cf8-4a39-b31f-0788631090ab",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I'm a dummy\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e8a6990a-cae3-470c-9144-af775d1d1200",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"singlepost_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cac3b155-a1a6-4f93-a500-f23473093b8c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"picture_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\" : \"imguristrash\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f0808e2e-ff9f-4dd7-91b3-39281995cab6",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"story_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lifespan\": \"2021-09-10T18:25:43.511Z\",\r\n\r\n    \"story_owner\":  \"{{user_id}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d552fc90-8804-4eb2-9885-5142a287564c",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200,500]);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "58a9cfde-672f-4abd-808c-fa3017379f43",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected username\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.username).to.eql('Kami');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/my/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"my",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48c540bd-53b7-4fc9-8f23-09b3db60c6e0",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check posts of specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a28672ee-a080-464b-ad35-8228f2a5f1f6",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f3172d37-f999-448c-a651-e5d45f75259e",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all stories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06e88cfc-450d-4da4-acd3-27b016aaf1e1",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2aed1051-9b94-451b-88d3-e2f20a613aaf",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0f777e7c-c491-4bfa-870e-f8c4ccc60ba2",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I hate you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a specific picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d0e6c156-b00a-4415-9c84-f1752b2a5515",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected picture_id\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristrash');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "77399da0-d01e-49b0-9092-414e8de4ae97",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected lifespan\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2021-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db4c2495-9133-45c1-8e45-433a02de0d2c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I want to kiss you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I want to kiss you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "96cc7b16-6ff0-40c0-a5a2-37ac6de66bf1",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(5);\r",
							"pm.expect(jsonData.unique_views).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"5\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"5\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "06cba820-28eb-4496-85df-4f214e6bdf34",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod123');\r",
							"pm.expect(jsonData.name).to.eql('Elohim');\r",
							"pm.expect(jsonData.email).to.eql('thelastjudgment@gmail.com');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod123\",\r\n\r\n   \"name\" : \"Elohim\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.com\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user in an invalid way",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "afb61023-fd0a-42c4-9b64-0ff8d7e5a35f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod1234');\r",
							"pm.expect(jsonData.name).to.eql('Elohime');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod1234\",\r\n\r\n   \"name\" : \"Elohime\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.commmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmxd\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9f33ce03-a23a-4dd2-9a1d-7b2a69de8657",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(4);\r",
							"pm.expect(jsonData.unique_views).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"4\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"4\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1ae2098a-ee9d-4936-b97b-9a92d025c6cd",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristhebest');\r",
							";\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\": \"imguristhebest\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "58985b68-6b1c-4180-a6c8-1912c1f1e192",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bcfe7e0e-e70b-42e2-9d8c-96c20202d299",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "940e94ce-448f-4734-a4e6-8aba791fb52a",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fc6b721e-4104-49ab-979c-7205373070a9",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9111169a-4927-4322-a42a-d31ecddcf0ec",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All Users deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete empty collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac6f8c50-c452-469b-8389-93d96b2c58bd",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected message\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.error).to.eql('No Users found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a286513-62af-4c50-806e-0e515a4d05ba",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All posts has been deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "86593cab-22e4-4699-a4ef-143d397b258f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "57a73dd3-ab72-4b43-9816-de4d7953c9ec",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('story deleted.');\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all stories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2fc76e25-43d0-4d1f-afe1-fe807ddce8a2",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('all stories deleted');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}
