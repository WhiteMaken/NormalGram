{
	"info": {
		"_postman_id": "50930cd0-a594-4f74-a760-a095f389dd73",
		"name": "Users",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "191ceb90-2d27-45f8-b45f-a652b46889b9",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"user_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"Kami\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"sanji.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"makenshi\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"mudg.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"God\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"thelastjudgment.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n   \"username\" : \"madoushi\",\r\n\r\n   \"password\" : \"pp1234\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"redmist.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c38a9bcb-b7de-45e3-a354-7d5814f5d2cf",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"pm.expect(jsonData.likes).to.eql(0);\r",
							"pm.expect(jsonData.unique_views).to.eql(0);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"post_id\", jsonData._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"text\" : \"I love you\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a8aeffa-2582-4f1e-b8ab-2805ce690def",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"singlepost_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "af84ffbf-2c73-421d-aac2-5eb16acfaed9",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I'm a dummy\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7d4fdc45-4ee2-4abe-b3e9-5eba91dfbbd6",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"singlepost_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "847c9136-3015-4ef2-88fe-3ce6d1cae263",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"picture_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\" : \"imguristrash\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "be0bae07-caf2-4be8-8742-d60b88ed9a80",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"story_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lifespan\": \"2021-09-10T18:25:43.511Z\",\r\n\r\n    \"story_owner\":  \"{{user_id}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0e5d165a-58db-4d0b-a6da-2aaf9e104eff",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200,500]);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "017f47dc-3409-471c-a03e-63e4209ce803",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected username\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.username).to.eql('Kami');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f8b97ba2-734f-462f-886e-69f6588ee892",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check posts of specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a474153f-5741-4024-8201-a53171e99d2e",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "444a6f01-1631-4fe3-afa1-6829bac782d1",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c80b9839-5e16-45fa-b4af-ff0daa6a1d75",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "151eceb3-e1fc-47cd-ad41-b621a256ff82",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I hate you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a specific picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "beba9907-222c-46b7-b1c9-8976610257c4",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected picture_id\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristrash');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a81fc82d-b3be-451e-8396-56ce61319e19",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected lifespan\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2021-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0174c640-60db-4304-b70e-42d0358bd600",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I want to kiss you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I want to kiss you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d7058d17-7507-4a35-97f7-b49a7e89c356",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(5);\r",
							"pm.expect(jsonData.unique_views).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"5\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"5\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "342f85ed-917c-4f23-aeda-f66e9dde24ae",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod123');\r",
							"pm.expect(jsonData.name).to.eql('Elohim');\r",
							"pm.expect(jsonData.email).to.eql('thelastjudgment@gmail.com');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod123\",\r\n\r\n   \"name\" : \"Elohim\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.com\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user in an invalid way",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "69cc26f1-4e95-418e-9b1b-3f4bd297d600",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod1234');\r",
							"pm.expect(jsonData.name).to.eql('Elohime');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod1234\",\r\n\r\n   \"name\" : \"Elohime\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.commmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmxd\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b406b63f-8674-4523-89a4-f252721f054d",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(4);\r",
							"pm.expect(jsonData.unique_views).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"4\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"4\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2e76eb25-bd4b-47db-b38e-1aa810cede46",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristhebest');\r",
							";\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\": \"imguristhebest\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1b4d997c-4388-4e53-9129-92faf46b4fe5",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d70623f-8270-4fcc-9292-06983e530451",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c619f02-bc8e-41da-b0c5-b0df08269671",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9208251a-03dc-4192-81f6-114c6f7647ee",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0c479934-06d3-40e9-a2a3-8244de0addd7",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All Users deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete empty collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a698469d-fd5b-480d-b717-7ef26b51b7a6",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected message\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.error).to.eql('No Users found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5048c90a-91cb-4638-92e0-d644adde2f53",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All posts has been deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d15bc5a8-a375-4e46-9b1c-a7110dca2e76",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1e1e426-d2e2-418d-90f7-20b76af9699c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('story deleted.');\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all stories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ceba961-3f78-47cb-b4ef-26effcdb98b9",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('all stories deleted');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}