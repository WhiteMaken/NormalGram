{
	"info": {
		"_postman_id": "34527ff4-834e-4386-bc80-d6e0c63f5205",
		"name": "Users Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a4db5b67-5758-4d66-84d8-95ec8f105586",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"user_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"Kami\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"sanji.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"makenshi\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"mudg.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"username\" : \"God\",\r\n\r\n   \"password\" : \"pp123\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"thelastjudgment.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a bunch of useless users",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " {\r\n   \"username\" : \"madoushi\",\r\n\r\n   \"password\" : \"pp1234\",\r\n\r\n   \"name\" : \"max\",\r\n\r\n   \"email\" : \"redmist.se\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post to user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a6ed5a9e-fd53-4110-9415-f8259f32ed97",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"pm.expect(jsonData.likes).to.eql(0);\r",
							"pm.expect(jsonData.unique_views).to.eql(0);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"post_id\", jsonData._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"text\" : \"I love you\"\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "df2cc726-d0d2-4084-ac08-b5ed23295f2f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"singlepost_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post test",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bd053625-8fe9-4978-8d47-3e8080534359",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I'm a dummy\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add useless post 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2575077e-520f-4b62-9a79-b75ed0f5afd9",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201,500]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I hate you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Post picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c3f6c76a-7ad4-4070-a274-ae1154383bfb",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"picture_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\" : \"imguristrash\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "29a76024-6d90-4ac7-8994-b70c586d4719",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"postman.setEnvironmentVariable( \"story_id\", jsonData._id );"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"lifespan\": \"2021-09-10T18:25:43.511Z\",\r\n\r\n    \"story_owner\":  \"{{user_id}}\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23fb475b-3b43-4e23-9782-6a6dfb9d8969",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200,500]);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1988ecff-dc00-4f25-9ce8-38a5b0bfb20d",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected username\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.username).to.eql('Kami');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/my/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"my",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8b0893f5-2dd4-470c-b33e-36530f736d2c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check posts of specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ab1ad47-dd39-4bd2-9e68-cf836412b182",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Find specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "37a75648-4f59-40be-b1e6-6f329b5aa8d3",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all stories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c5515bc-b901-4979-81e2-f753e38da7eb",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "18b1bd88-94e6-45c5-beb3-e805ce8ce7b1",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "201a3adb-c139-43e0-8c9f-3ed60a5a927e",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I hate you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a specific picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "948b4993-6c69-44b8-b608-2e0effda84fb",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected picture_id\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristrash');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8834dc4f-0d40-4cc7-980b-fb79a556a545",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected lifespan\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2021-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put a post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6d065a0b-9289-47aa-bbd9-55c1ae6bf907",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I want to kiss you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"text\": \"I want to kiss you\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Put story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a564d8f5-ffa7-41ff-9992-5c9773fc58b2",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(5);\r",
							"pm.expect(jsonData.unique_views).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"5\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"5\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46d9f997-f62d-4136-90ae-e2e825a332d3",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod123');\r",
							"pm.expect(jsonData.name).to.eql('Elohim');\r",
							"pm.expect(jsonData.email).to.eql('thelastjudgment@gmail.com');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod123\",\r\n\r\n   \"name\" : \"Elohim\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.com\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch user in an invalid way",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d41ccede-19bd-46d2-b8f3-b5a28ee4bfda",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.password).to.eql('iamgod1234');\r",
							"pm.expect(jsonData.name).to.eql('Elohime');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"password\" : \"iamgod1234\",\r\n\r\n   \"name\" : \"Elohime\",\r\n\r\n   \"email\" : \"thelastjudgment@gmail.commmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmxd\"\r\n\r\n }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2097b3a4-5598-449f-a51e-8b93c35e132f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"pm.expect(jsonData.likes).to.eql(4);\r",
							"pm.expect(jsonData.unique_views).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"unique_views\": \"4\",\r\n\r\n    \"lifespan\": \"2023-09-10T18:25:43.511Z\",\r\n\r\n    \"likes\": \"4\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Patch picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4f6eb26-d8a4-4da3-94e8-4ed4af2f0649",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.picture_url).to.eql('imguristhebest');\r",
							";\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"picture_url\": \"imguristhebest\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1c8c73a4-34bd-4a35-93a1-3ad42c54ba8c",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts/{{singlepost_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts",
						"{{singlepost_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific post",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0dd78737-1aed-4612-ac81-366e842d844f",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected text\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.text).to.eql('I love you');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}/posts/{{post_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}",
						"posts",
						"{{post_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03a69403-3679-466d-827a-264988122c10",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/{{user_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete invalid user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "23f84c43-b89e-4fe6-8eac-46cd21035c37",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users/5f609d72dabd6957b4022d82",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users",
						"5f609d72dabd6957b4022d82"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a47a676b-ab85-4de1-9d53-5ab6cb991a4f",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All Users deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(3);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete empty collection",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c232e1a-fdb5-4cf3-bc3c-5975e39a043d",
						"exec": [
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([404]);\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected message\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.error).to.eql('No Users found.');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ef9bc8c8-2150-420e-a137-250581e7f6c5",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('All posts has been deleted.');\r",
							"pm.expect(jsonData.deletedCount).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/posts",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete single picture",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f285fd9a-fba4-4d2f-aa31-82f333b4d8e0",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/pictures/{{picture_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"pictures",
						"{{picture_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete specific story",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "07367890-3ef1-4952-9b26-31cd0c7b9904",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('story deleted.');\r",
							"pm.expect(jsonData.lifespan).to.eql('2023-09-10T18:25:43.511Z');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories/{{story_id}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories",
						"{{story_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete all stories",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb0a52f8-523e-4099-a184-e976438b69bd",
						"exec": [
							"pm.test(\"response is CREATED\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"\r",
							"pm.test(\"response should have valid JSON data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response should have expected data\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"pm.expect(jsonData.message).to.eql('all stories deleted');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/stories",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"stories"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}